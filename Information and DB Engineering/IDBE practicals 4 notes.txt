CREATE PROCEDURE addInterest (theBranchName VARCHAR, theInterest DECIMAL) AS

BEGIN

	UPDATE Deposit SET balance = balance * (theInterest+100.0)/100.0 WHERE branchName = theBranchName;

END;
/


EXECUTE addInterest(Midlands, 30);


CREATE OR REPLACE PROCEDURE addInterest (theBranchName VARCHAR, theInterest DECIMAL) AS
CURSOR CustomerRows IS 
	SELECT customerName FROM deposit WHERE branchName = theBranchName;
	updatedCustomers deposit.customerName%TYPE;
	
BEGIN
	OPEN CustomerRows;
	UPDATE Deposit SET balance = balance * (theInterest + 100.0) / 100.0 WHERE branchName = theBranchName;
LOOP
	FETCH CustomerRows INTO updatedCustomers;
	EXIT WHEN CustomerRows%NOTFOUND;
	dbms_output.put_line('Customer Name = ' || updatedCustomers);
END LOOP;
	CLOSE CustomerRows;
END;
/

CREATE FUNCTION getTotalLoan (theBranchName VARCHAR)
RETURN DECIMAL IS 
aLoanAmount DECIMAL(6,2);
BEGIN
	SELECT SUM(Amount) INTO aLoanAmount FROM Loan WHERE branchName = theBranchName;
	RETURN aLoanAmount;
END;
/

EXECUTE getTotalLoan(Yorkshire);